// <auto-generated />
using System;
using LanguageLearning.Models;
using Microsoft.EntityFrameworkCore;
using Microsoft.EntityFrameworkCore.Infrastructure;
using Microsoft.EntityFrameworkCore.Metadata;
using Microsoft.EntityFrameworkCore.Migrations;
using Microsoft.EntityFrameworkCore.Storage.ValueConversion;

namespace LanguageLearning.Migrations
{
    [DbContext(typeof(WordContext))]
    [Migration("20180826131739_word_quiz_db")]
    partial class word_quiz_db
    {
        protected override void BuildTargetModel(ModelBuilder modelBuilder)
        {
#pragma warning disable 612, 618
            modelBuilder
                .HasAnnotation("ProductVersion", "2.1.1-rtm-30846")
                .HasAnnotation("Relational:MaxIdentifierLength", 128)
                .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

            modelBuilder.Entity("LanguageLearning.Models.Hiragana", b =>
                {
                    b.Property<int>("ID")
                        .ValueGeneratedOnAdd()
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<string>("Kana")
                        .IsRequired();

                    b.Property<string>("Romaji")
                        .IsRequired();

                    b.HasKey("ID");

                    b.ToTable("Hiragana");
                });

            modelBuilder.Entity("LanguageLearning.Models.JapaneseWord", b =>
                {
                    b.Property<int>("ID")
                        .ValueGeneratedOnAdd()
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<string>("Definition")
                        .IsRequired();

                    b.Property<string>("Kana")
                        .IsRequired();

                    b.Property<string>("Name")
                        .IsRequired();

                    b.Property<string>("Notes");

                    b.Property<string>("PartsOfSpeech");

                    b.HasKey("ID");

                    b.ToTable("JapaneseWord");
                });

            modelBuilder.Entity("LanguageLearning.Models.Katakana", b =>
                {
                    b.Property<int>("ID")
                        .ValueGeneratedOnAdd()
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<string>("Kana")
                        .IsRequired();

                    b.Property<string>("Romaji")
                        .IsRequired();

                    b.HasKey("ID");

                    b.ToTable("Katakana");
                });

            modelBuilder.Entity("LanguageLearning.Models.KoreanWord", b =>
                {
                    b.Property<int>("ID")
                        .ValueGeneratedOnAdd()
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<string>("Definition")
                        .IsRequired();

                    b.Property<string>("Name")
                        .IsRequired();

                    b.Property<string>("Notes");

                    b.Property<string>("PartsOfSpeech");

                    b.Property<string>("SoundChange");

                    b.HasKey("ID");

                    b.ToTable("KoreanWord");
                });

            modelBuilder.Entity("LanguageLearning.Models.LanguageQuiz.QuizSessionModel", b =>
                {
                    b.Property<int>("ID")
                        .ValueGeneratedOnAdd()
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<int>("CurrentLanguage");

                    b.Property<int?>("CurrentUserID");

                    b.Property<int>("WordLimit");

                    b.HasKey("ID");

                    b.HasIndex("CurrentUserID");

                    b.ToTable("QuizSessionModel");
                });

            modelBuilder.Entity("LanguageLearning.Models.LanguageQuiz.WordAppearanceSession", b =>
                {
                    b.Property<int>("ID")
                        .ValueGeneratedOnAdd()
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<int?>("HiraganaID");

                    b.Property<int?>("JapaneseWordID");

                    b.Property<int?>("KatakanaID");

                    b.Property<int?>("KoreanWordID");

                    b.Property<int?>("UserID");

                    b.HasKey("ID");

                    b.HasIndex("HiraganaID");

                    b.HasIndex("JapaneseWordID");

                    b.HasIndex("KatakanaID");

                    b.HasIndex("KoreanWordID");

                    b.HasIndex("UserID");

                    b.ToTable("WordAppearanceSessions");
                });

            modelBuilder.Entity("LanguageLearning.Models.UserData", b =>
                {
                    b.Property<int>("ID")
                        .ValueGeneratedOnAdd()
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<string>("Password");

                    b.Property<string>("StringifiedSalt");

                    b.Property<string>("UserName");

                    b.HasKey("ID");

                    b.ToTable("UserData");
                });

            modelBuilder.Entity("LanguageLearning.Models.LanguageQuiz.QuizSessionModel", b =>
                {
                    b.HasOne("LanguageLearning.Models.UserData", "CurrentUser")
                        .WithMany()
                        .HasForeignKey("CurrentUserID");
                });

            modelBuilder.Entity("LanguageLearning.Models.LanguageQuiz.WordAppearanceSession", b =>
                {
                    b.HasOne("LanguageLearning.Models.Hiragana", "Hiragana")
                        .WithMany()
                        .HasForeignKey("HiraganaID");

                    b.HasOne("LanguageLearning.Models.JapaneseWord", "JapaneseWord")
                        .WithMany()
                        .HasForeignKey("JapaneseWordID");

                    b.HasOne("LanguageLearning.Models.Katakana", "Katakana")
                        .WithMany()
                        .HasForeignKey("KatakanaID");

                    b.HasOne("LanguageLearning.Models.KoreanWord", "KoreanWord")
                        .WithMany()
                        .HasForeignKey("KoreanWordID");

                    b.HasOne("LanguageLearning.Models.UserData", "User")
                        .WithMany()
                        .HasForeignKey("UserID");
                });
#pragma warning restore 612, 618
        }
    }
}
